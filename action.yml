name: 'reMarkable-Nuitka-Build-Action'
description: Run nuitka build for the reMarkable tablet
author: Eeems
branding:
  icon: tablet
  color: white
inputs:
  main:
    description: Name of the file to compile relative to the path argument
    required: true
  path:
    description: Folder that contains the source code to compile.
    required: false
    default: ${{ github.workspace }}
  output_dir:
    description: Output directory to use relative to the path argument
    required: false
    default: dist
  mode:
    description: Compilation mode to use
    type: choice
    required: false
    default: onefile
    options:
      - standalone
      - onefile
  lto:
    description: Use link time optimizations
    type: choice
    required: false
    default: auto
    options:
      - 'yes'
      - 'no'
      - auto
  static_libpython:
    description: Use static link library for python
    type: choice
    required: false
    default: auto
    options:
      - 'yes'
      - 'no'
      - auto
  extra_flags:
    description: Extra flags to pass to nuitka
    required: false
    default: |
      --assume-yes-for-downloads
      --warn-implicit-exceptions
      --warn-unusual-code
      --remove-output
      --enable-plugin=pylint-warnings
      --enable-plugin=upx
  run:
    description: Execute immediately after compilation
    type: boolean
    required: false
    default: false
  python_version:
    description: Python version to use
    required: false
    default: '3.12'
  clean_docker_cache:
    description: Clean the local docker cache before running
    required: false
    type: boolean
    default: false
  ccache_key:
    description: Key used for nuitka ccache
    required: false
    default: ${{ github.job }}-remarkable-2.15.1
runs:
  using: composite
  steps:
    - name: Nuitka ccache
      uses: actions/cache@v3
      with:
        path: ${{ inputs.path }}/.nuitka
        key: ${{ inputs.ccache_key }}
    - uses: Eeems-Org/run-in-remarkable-action@v1
      with:
        path: ${{ inputs.path }}
        fw_version: 2.15.1
        clean_cache: ${{ inputs.clean_docker_cache }}
        setup: |
          set -e
          sh -c "$(wget https://raw.githubusercontent.com/Eeems-Org/remarkable-debian-chroot/master/install.sh -O-)"
          debian-chroot bash -x <<'EOF'
            set -e
            export LC_ALL=C
            echo "export LC_ALL=C" >> ~/.bashrc
            apt install -y \
              ccache \
              clang \
              curl \
              git \
              libffi-dev \
              patchelf \
              python3-dev \
              upx
            if [[ "${{ inputs.python_version }}" == "3.9" ]]; then
              apt install -y \
                python3-pip \
                python3-venv
            else
              curl https://pyenv.run | bash
              echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
              echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
              echo 'eval "$(pyenv init -)"' >> ~/.bashrc
              echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.bashrc
              export PYENV_ROOT="$HOME/.pyenv"
              export PATH="$PYENV_ROOT/bin:$PATH"
              eval "$(pyenv init -)"
              eval "$(pyenv virtualenv-init -)"
              pyenv install "${{ inputs.python_version }}"
              pyenv global "${{ inputs.python_version }}"
            fi
            python3 -m venv /opt/lib/nuitka
            source /opt/lib/nuitka/bin/activate
            pip install \
              --extra-index-url https://wheels.eeems.codes/ \
              nuitka
          EOF
        run: |
          set -eu
          source /home/root/.config/debian-chroot.conf
          mkdir -p "${chroot_path}/mnt/src"
          mount --bind . "${chroot_path}/mnt/src"
          debian-chroot bash -x <<'EOF'
            set -e
            source /opt/lib/nuitka/bin/activate
            cd /mnt/src
            if [ -f requirements.txt ]; then
              pip install -r requirements.txt
            fi
            NUITKA_CACHE_DIR="/mnt/src/.nuitka" \
            nuitka3 \
              --${{ inputs.mode }} \
              --lto=${{ inputs.lto }} \
              --static-libpython=${{ inputs.static_libpython }} \
              --output-dir="${{ inputs.output_dir }}" \
              --main="${{ inputs.main }}" \
              $(echo "${{ inputs.extra_flags }}" | tr '\n' ' ')
          EOF
          if ${{ inputs.run }}; then
            find "${chroot_path}/mnt/src/${{ inputs.output_dir }}" -name '*.bin' \
            | xargs -rn1 \
            | while read -r bin; do
              echo "Running $(basename "$bin")"
              "$bin"
            done
          fi
